<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ccs.cmn.mapper.cat.CatProfileMapper">

<!-- ** 고양이 상세 프로필 조회 ** -->

	<!-- 고양이 프로필 정보 조회 -->
	<select id="selectCatProfile" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT C.CAT_CD 
			, MAX(C.GROUP_YN) 													AS GROUP_YN
			, MAX(CASE WHEN TCC2.CARE_TYPE = 'E' THEN '종료' ELSE '재개' END) 		AS CARE_TYPE_NM
			, MAX(fn_get_code_name('C0002', TCC2.REASON_CD)) 					AS CARE_REASON_NM	
			, MAX(fn_get_area_name(C.SIDO_CD))									AS SIDO_NM
			, MAX(fn_get_area_name(C.SIGUNGU_CD))                               AS SIGUNGU_NM
			, MAX(fn_get_area_name(C.DONG_CD))                                  AS DONG_NM
			, MAX(fn_get_code_name('C0003', TCP.CATKIND_CD)) 					AS CAT_KIND_NM
			, MAX(TCP.INTRODUCTION)                                             AS INTRODUCTION
			, MAX(TCP.FILE_GRP_ID)                                              AS FILE_GRP_ID
			, MAX(TF.FILE_PATH)                                                 AS FILE_PATH
			, MAX(CASE WHEN TCC.CAUTION_YN = 'Y' THEN 'Y' ELSE null END)        AS CAUTION_YN
			, AVG(TCC.AGGRESSION)                                               AS AGGRESSION
			, AVG(TCC.SENSITIVITY)                                              AS SENSITIVITY
			, MAX(TCN.CAT_NAME)													AS CAT_NAME
			, COUNT(TCR.TARGET_CD)												AS CARE_YN
			, COUNT(TBM.TARGET_CD)												AS BOOKMARK_YN		
		FROM TB_CAT C
			LEFT JOIN TB_CAT_PROFILE TCP
				ON C.CAT_CD = TCP.CAT_CD
			LEFT JOIN TB_FILE TF
				ON TCP.FILE_GRP_ID = TF.FILE_GRP_ID  
			LEFT JOIN TB_CAT_CHARACTERISTIC TCC
				ON C.CAT_CD = TCC.CAT_CD  
			LEFT JOIN TB_CAT_CARE TCC2
				ON C.CAT_CD = TCC2.CAT_CD
					AND TCC2.CATCARE_CD = (SELECT MAX(T.CATCARE_CD) 
											FROM TB_CAT_CARE T 
											WHERE T.CAT_CD = C.CAT_CD)
			LEFT JOIN TB_CAT_NAME TCN 
				ON C.CAT_CD = TCN.CAT_CD 
				AND TCN.USER_CD = #{_SESSION_USER_CD_}
			LEFT JOIN TB_CARE TCR 
				ON C.CAT_CD = TCR.TARGET_CD 
				AND TCR.USER_CD = #{_SESSION_USER_CD_}
			LEFT JOIN TB_BOOKMARK TBM 
				ON C.CAT_CD = TBM.TARGET_CD 
				AND TBM.USER_CD = #{_SESSION_USER_CD_}
		WHERE TCP.CAT_CD = #{cat_cd}
		GROUP BY C.CAT_CD
	</select>
	
	<!-- 고양이 무리 프로필 정보 조회 -->
	<select id="selectCatGrpProfile" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT C.CAT_CD 
			, MAX(C.GROUP_YN) 													AS GROUP_YN
			, MAX(TCC2.CARE_TYPE) 												AS CARE_TYPE
			, MAX(FN_GET_CODE_NAME('C0002', TCC2.REASON_CD)) 					AS CARE_REASON_NM	
			, MAX(FN_GET_AREA_NAME(C.SIDO_CD))									AS SIDO_NM
			, MAX(FN_GET_AREA_NAME(C.SIGUNGU_CD))                               AS SIGUNGU_NM
			, MAX(FN_GET_AREA_NAME(C.DONG_CD))                                  AS DONG_NM
			, MAX(TCP.INTRODUCTION)                                             AS INTRODUCTION
			, MAX(TCP.FILE_GRP_ID)                                              AS FILE_GRP_ID
			, MAX(TF.FILE_PATH)                                                 AS FILE_PATH
			, MAX(CASE WHEN TCC.CAUTION_YN = 'Y' THEN 'Y' ELSE NULL END)        AS CAUTION_YN
			, AVG(TCC.AGGRESSION)                                               AS AGGRESSION
			, AVG(TCC.SENSITIVITY)                                              AS SENSITIVITY
			, MAX(TCN.CAT_NAME)													AS CAT_NAME
			, COUNT(TCR.TARGET_CD)												AS CARE_YN
			, COUNT(TBM.TARGET_CD)												AS BOOKMARK_YN	
		FROM TB_CAT C
			LEFT JOIN TB_CAT_GRP_PROFILE TCP
				ON C.CAT_CD = TCP.CAT_CD
			LEFT JOIN TB_FILE TF
				ON TCP.FILE_GRP_ID = TF.FILE_GRP_ID  
			LEFT JOIN TB_CAT_CHARACTERISTIC TCC
				ON C.CAT_CD = TCC.CAT_CD  
			LEFT JOIN TB_CAT_CARE TCC2
				ON C.CAT_CD = TCC2.CAT_CD
					AND TCC2.CATCARE_CD = (SELECT MAX(T.CATCARE_CD) 
											FROM TB_CAT_CARE T 
											WHERE T.CAT_CD = C.CAT_CD)
			LEFT JOIN TB_CAT_NAME TCN 
				ON C.CAT_CD = TCN.CAT_CD 
				AND TCN.USER_CD = #{_SESSION_USER_CD_}
			LEFT JOIN TB_CARE TCR 
				ON C.CAT_CD = TCR.TARGET_CD 
				AND TCR.USER_CD = #{_SESSION_USER_CD_}
			LEFT JOIN TB_BOOKMARK TBM 
				ON C.CAT_CD = TBM.TARGET_CD 
				AND TBM.USER_CD = #{_SESSION_USER_CD_}
		WHERE TCP.CAT_CD = #{cat_cd}
		GROUP BY C.CAT_CD
	</select>
	
	<!-- 고양이 건강 정보 조회 -->
	<select id="selectCatHealthy" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT fn_get_code_name('C0001', H.DISEASE_CD) AS DISEASE_NM
			, fn_get_code_name('C0001', H.DISEASE_CD2) AS DISEASE_NM2
			, fn_get_code_name('C0001', H.DISEASE_CD3) AS DISEASE_NM3
			, H.DISEASE_DETAIL
			, H.FILE_GRP_ID
			, H.USER_CD
		FROM TB_CAT_HEALTHY H
		WHERE H.CAT_CD = #{cat_cd}
	</select>
	
	
	
<!-- ** 돌봄 등록 or 해제 ** -->

	<!-- 돌봄 갯수(여부) 조회 -->
	<select id="selectCareCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM TB_CARE C
		WHERE C.TARGET_CD = #{target_cd}
			AND C.USER_CD = #{_SESSION_USER_CD_}
	</select>

	<!-- 돌봄 삭제 -->
	<delete id="deleteCare" parameterType="java.util.Map">
		DELETE FROM TB_CARE C
		WHERE C.TARGET_CD = #{target_cd}
			AND C.USER_CD = #{_SESSION_USER_CD_}
	</delete>

	<!-- 돌봄 등록 -->		
	<insert id="insertCare" parameterType="java.util.Map" >
		INSERT INTO TB_CARE (USER_CD
							, TARGET_TYPE
							, TARGET_CD
							, REG_ID
							, REG_DT
							, UPDT_ID
							, UPDT_DT) 
		VALUES (#{_SESSION_USER_CD_}
					, #{target_type}
					, #{target_cd}
					, #{_SESSION_USER_CD_} -- 입력사용자
					, NOW() -- 입력일자
					, #{_SESSION_USER_CD_} -- 변경사용자
					, NOW() -- 변경일자
		) 
	</insert>



<!-- ** 돌봄 목록  ** -->

	<!-- 돌봄 목록 조회 -->
	<select id="selectCareList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT C.USER_CD
				, C.REG_DT
				, U.USERID 
				, U.NICKNAME
				, F.FILE_PATH
		FROM TB_CARE C
			JOIN TB_USER U
				ON C.USER_CD = U.USER_CD 
			LEFT JOIN TB_USERPROFILE P
				ON P.USER_CD = U.USER_CD
			LEFT JOIN TB_FILE F
				ON F.FILE_GRP_ID = P.FILE_GRP_ID
		<where>
			C.TARGET_CD = #{target_cd}
			<if test="nickname != null and !nickname.equals('')">
				AND U.NICKNAME like '%'|| #{nickname} ||'%'
			</if>
			<if test="userid != null and !userid.equals('')">
				AND U.USERID like '%'|| #{userid} ||'%'
			</if>
		</where>
	</select>

<!-- ** 즐겨찾기 등록 or 해제 ** -->

	<!-- 즐겨찾기 갯수(여부) 조회 -->
	<select id="selectBookMarkCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM TB_BOOKMARK C
		WHERE C.TARGET_CD = #{target_cd}
			AND C.USER_CD = #{_SESSION_USER_CD_}
	</select>
	
	<!-- 즐겨찾기 삭제 -->
	<delete id="deleteBookMark" parameterType="java.util.Map">
		DELETE FROM TB_BOOKMARK C
		WHERE C.TARGET_CD = #{target_cd}
			AND C.USER_CD = #{_SESSION_USER_CD_}
	</delete>
	
	<!-- 즐겨찾기 등록 -->
	<insert id="insertBookMark" parameterType="java.util.Map" >
		INSERT INTO TB_BOOKMARK (USER_CD
								, TARGET_TYPE
								, TARGET_CD
								, REG_ID
								, REG_DT
								, UPDT_ID
								, UPDT_DT) 
		VALUES (#{_SESSION_USER_CD_}
				, #{target_type}
				, #{target_cd}
				, #{_SESSION_USER_CD_} -- 입력사용자
				, NOW() -- 입력일자
				, #{_SESSION_USER_CD_} -- 변경사용자
				, NOW() -- 변경일자
		) 
	</insert>

<!-- ** 즐겨찾기 목록  ** -->

	<!-- 즐겨찾기 목록 조회 -->
	<select id="selectBookMarkList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT C.USER_CD
				, C.REG_DT
				, U.USERID 
				, U.NICKNAME
				, F.FILE_PATH
		FROM TB_BOOKMARK C
			JOIN TB_USER U
				ON C.USER_CD = U.USER_CD 
			LEFT JOIN TB_USERPROFILE P
				ON P.USER_CD = U.USER_CD
			LEFT JOIN TB_FILE F
				ON F.FILE_GRP_ID = P.FILE_GRP_ID
		<where>
			C.TARGET_CD = #{target_cd}
			<if test="nickname != null and !nickname.equals('')">
				AND U.NICKNAME like '%'|| #{nickname} ||'%'
			</if>
			<if test="userid != null and !userid.equals('')">
				AND U.USERID like '%'|| #{userid} ||'%'
			</if>
		</where>
	</select>	

</mapper>