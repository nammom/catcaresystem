<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ccs.cmn.mapper.cat.CatProfileMapper">

<!-- ** 고양이 상세 프로필 조회 ** -->

	<!-- 고양이 프로필 정보 조회 -->
	<select id="selectCatProfile" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT C.CAT_CD 
			, MAX(C.GROUP_YN) 														AS GROUP_YN
			, MAX(CASE WHEN TCC2.CARE_TYPE = 'E' THEN '종료' 
					WHEN TCC2.CARE_TYPE = 'S' THEN '재개' 
					ELSE '' END) 													AS CARE_TYPE_NM 
			, MAX(fn_get_code_name('C0002', TCC2.REASON_CD)) 						AS CARE_REASON_NM	
			, MAX(fn_get_area_name(C.SIDO_CD))										AS SIDO_NM
			, MAX(fn_get_area_name(C.SIGUNGU_CD))                               	AS SIGUNGU_NM
			, MAX(fn_get_area_name(C.DONG_CD))                                  	AS DONG_NM
			, MAX(COALESCE(fn_get_code_name('C0003', TCP.CATKIND_CD), '알수없음')) 	AS CAT_KIND_NM
			, MAX(TCP.AGE)															AS AGE
			, MAX(CASE WHEN TCP.GENDER = 'F' THEN '암컷'
					WHEN TCP.GENDER = 'M' THEN '수컷'
					ELSE '알수없음' END)												AS GENDER
			, MAX(CASE WHEN TCP.NEUTERING_YN = 'Y' THEN '예'
					WHEN TCP.NEUTERING_YN = 'N' THEN '아니오'
					ELSE '알수없음' END)												AS NEUTERING_YN
			, MAX(TCP.INTRODUCTION)                                             	AS INTRODUCTION
			, MAX(TCP.FILE_GRP_ID)                                              	AS FILE_GRP_ID
			, MAX(TF.FILE_PATH)                                                 	AS FILE_PATH
			, MAX(CASE WHEN TCC.CAUTION_YN = 'Y' THEN 'Y' ELSE null END)        	AS CAUTION_YN
			, AVG(TCC.AGGRESSION)                                               	AS AGGRESSION
			, AVG(TCC.SENSITIVITY)                                              	AS SENSITIVITY
			, MAX(TCN.CAT_NAME)														AS CAT_NAME
			, COUNT(TCR.TARGET_CD)													AS CARE_YN
			, COUNT(TBM.TARGET_CD)													AS BOOKMARK_YN		
		FROM TB_CAT C
			LEFT JOIN TB_CAT_PROFILE TCP
				ON C.CAT_CD = TCP.CAT_CD
			LEFT JOIN TB_FILE TF
				ON TCP.FILE_GRP_ID = TF.FILE_GRP_ID  
			LEFT JOIN TB_CAT_CHARACTERISTIC TCC
				ON C.CAT_CD = TCC.CAT_CD  
			LEFT JOIN TB_CAT_CARE TCC2
				ON C.CAT_CD = TCC2.CAT_CD
					AND TCC2.CATCARE_CD = (SELECT MAX(T.CATCARE_CD) 
											FROM TB_CAT_CARE T 
											WHERE T.CAT_CD = C.CAT_CD)
			LEFT JOIN TB_CAT_NAME TCN 
				ON C.CAT_CD = TCN.CAT_CD 
				AND TCN.USER_CD = #{_SESSION_USER_CD_}
			LEFT JOIN TB_CARE TCR 
				ON C.CAT_CD = TCR.TARGET_CD
				AND TCR.TARGET_TYPE = 'cat' 
				AND TCR.USER_CD = #{_SESSION_USER_CD_}
			LEFT JOIN TB_BOOKMARK TBM 
				ON C.CAT_CD = TBM.TARGET_CD
				AND TBM.TARGET_TYPE = 'cat' 
				AND TBM.USER_CD = #{_SESSION_USER_CD_}
		WHERE TCP.CAT_CD = #{cat_cd}
		GROUP BY C.CAT_CD
	</select>
	
	<!-- 고양이 무리 프로필 정보 조회 -->
	<select id="selectCatGrpProfile" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT C.CAT_CD 
			, MAX(C.GROUP_YN) 													AS GROUP_YN
			, MAX(CASE WHEN TCC2.CARE_TYPE = 'E' THEN '종료' 
					WHEN TCC2.CARE_TYPE = 'S' THEN '재개' 
					ELSE '' END) 												AS CARE_TYPE_NM 
			, MAX(FN_GET_CODE_NAME('C0002', TCC2.REASON_CD)) 					AS CARE_REASON_NM	
			, MAX(FN_GET_AREA_NAME(C.SIDO_CD))									AS SIDO_NM
			, MAX(FN_GET_AREA_NAME(C.SIGUNGU_CD))                               AS SIGUNGU_NM
			, MAX(FN_GET_AREA_NAME(C.DONG_CD))                                  AS DONG_NM
			, MAX(TCP.INTRODUCTION)                                             AS INTRODUCTION
			, MAX(TCP.FILE_GRP_ID)                                              AS FILE_GRP_ID
			, MAX(TF.FILE_PATH)                                                 AS FILE_PATH
			, MAX(CASE WHEN TCC.CAUTION_YN = 'Y' THEN 'Y' ELSE NULL END)        AS CAUTION_YN
			, AVG(TCC.AGGRESSION)                                               AS AGGRESSION
			, AVG(TCC.SENSITIVITY)                                              AS SENSITIVITY
			, MAX(TCN.CAT_NAME)													AS CAT_NAME
			, COUNT(TCR.TARGET_CD)												AS CARE_YN
			, COUNT(TBM.TARGET_CD)												AS BOOKMARK_YN	
		FROM TB_CAT C
			LEFT JOIN TB_CAT_GRP_PROFILE TCP
				ON C.CAT_CD = TCP.CAT_CD
			LEFT JOIN TB_FILE TF
				ON TCP.FILE_GRP_ID = TF.FILE_GRP_ID  
			LEFT JOIN TB_CAT_CHARACTERISTIC TCC
				ON C.CAT_CD = TCC.CAT_CD  
			LEFT JOIN TB_CAT_CARE TCC2
				ON C.CAT_CD = TCC2.CAT_CD
					AND TCC2.CATCARE_CD = (SELECT MAX(T.CATCARE_CD) 
											FROM TB_CAT_CARE T 
											WHERE T.CAT_CD = C.CAT_CD)
			LEFT JOIN TB_CAT_NAME TCN 
				ON C.CAT_CD = TCN.CAT_CD 
				AND TCN.USER_CD = #{_SESSION_USER_CD_}
			LEFT JOIN TB_CARE TCR 
				ON C.CAT_CD = TCR.TARGET_CD
				AND TCR.TARGET_TYPE = 'grp' 
				AND TCR.USER_CD = #{_SESSION_USER_CD_}
			LEFT JOIN TB_BOOKMARK TBM 
				ON C.CAT_CD = TBM.TARGET_CD
				AND TBM.TARGET_TYPE = 'grp' 
				AND TBM.USER_CD = #{_SESSION_USER_CD_}
		WHERE TCP.CAT_CD = #{cat_cd}
		GROUP BY C.CAT_CD
	</select>
	
	<!-- 고양이 건강 정보 조회 -->
	<select id="selectCatHealthy" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT fn_get_code_name('C0001', H.DISEASE_CD) AS DISEASE_NM
			, fn_get_code_name('C0001', H.DISEASE_CD2) AS DISEASE_NM2
			, fn_get_code_name('C0001', H.DISEASE_CD3) AS DISEASE_NM3
			, H.DISEASE_DETAIL
			, H.FILE_GRP_ID
			, H.USER_CD
		FROM TB_CAT_HEALTHY H
		WHERE H.CAT_CD = #{cat_cd}
	</select>
	
	<!-- ** 고양이 애칭 등록 ** -->	
	<select id="selectCatName" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT N.CAT_CD
			, N.CAT_NAME
		FROM TB_CAT_NAME N
		WHERE N.USER_CD = #{_SESSION_USER_CD_}
			AND N.CAT_CD = #{target_cd}
	</select>
	
	<delete id="deleteCatName" parameterType="java.util.Map">
		DELETE FROM TB_CAT_NAME N
		WHERE N.USER_CD = #{_SESSION_USER_CD_}
			AND N.CAT_CD = #{target_cd}
	</delete>
	
	<select id="insertCatName" parameterType="java.util.Map" resultType="java.lang.Integer">
		INSERT INTO TB_CAT_NAME 
				(USER_CD
				, CAT_CD
				, CAT_NAME
				, REG_ID
				, REG_DT
				, UPDT_ID
				, UPDT_DT) 
		VALUES (#{_SESSION_USER_CD_}
					, #{target_cd}
					, #{cat_name}
					, #{_SESSION_USER_CD_} -- 입력사용자
					, NOW() -- 입력일자
					, #{_SESSION_USER_CD_} -- 변경사용자
					, NOW() -- 변경일자
		) 
	</select>

</mapper>